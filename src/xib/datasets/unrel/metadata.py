from xib.structures import Vocabulary

# Both OBJECTS and PREDICATES follow the original json annotation file,
# except that ' ' is substituted with '_'

OBJECTS = Vocabulary(
    (
        "person",
        "sky",
        "building",
        "truck",
        "bus",
        "table",
        "shirt",
        "chair",
        "car",
        "train",
        "glasses",
        "tree",
        "boat",
        "hat",
        "trees",
        "grass",
        "pants",
        "road",
        "motorcycle",
        "jacket",
        "monitor",
        "wheel",
        "umbrella",
        "plate",
        "bike",
        "clock",
        "bag",
        "shoe",
        "laptop",
        "desk",
        "cabinet",
        "counter",
        "bench",
        "shoes",
        "tower",
        "bottle",
        "helmet",
        "stove",
        "lamp",
        "coat",
        "bed",
        "dog",
        "mountain",
        "horse",
        "plane",
        "roof",
        "skateboard",
        "traffic_light",
        "bush",
        "phone",
        "airplane",
        "sofa",
        "cup",
        "sink",
        "shelf",
        "box",
        "van",
        "hand",
        "shorts",
        "post",
        "jeans",
        "cat",
        "sunglasses",
        "bowl",
        "computer",
        "pillow",
        "pizza",
        "basket",
        "elephant",
        "kite",
        "sand",
        "keyboard",
        "plant",
        "can",
        "vase",
        "refrigerator",
        "cart",
        "skis",
        "pot",
        "surfboard",
        "paper",
        "mouse",
        "trash_can",
        "cone",
        "camera",
        "ball",
        "bear",
        "giraffe",
        "tie",
        "luggage",
        "faucet",
        "hydrant",
        "snowboard",
        "oven",
        "engine",
        "watch",
        "face",
        "street",
        "ramp",
        "suitcase",
    )
)

PREDICATES = Vocabulary(
    (
        "on",
        "wear",
        "has",
        "next_to",
        "sleep_next_to",
        "sit_next_to",
        "stand_next_to",
        "park_next",
        "walk_next_to",
        "above",
        "behind",
        "stand_behind",
        "sit_behind",
        "park_behind",
        "in_the_front_of",
        "under",
        "stand_under",
        "sit_under",
        "near",
        "walk_to",
        "walk",
        "walk_past",
        "in",
        "below",
        "beside",
        "walk_beside",
        "over",
        "hold",
        "by",
        "beneath",
        "with",
        "on_the_top_of",
        "on_the_left_of",
        "on_the_right_of",
        "sit_on",
        "ride",
        "carry",
        "look",
        "stand_on",
        "use",
        "at",
        "attach_to",
        "cover",
        "touch",
        "watch",
        "against",
        "inside",
        "adjacent_to",
        "across",
        "contain",
        "drive",
        "drive_on",
        "taller_than",
        "eat",
        "park_on",
        "lying_on",
        "pull",
        "talk",
        "lean_on",
        "fly",
        "face",
        "play_with",
        "sleep_on",
        "outside_of",
        "rest_on",
        "follow",
        "hit",
        "feed",
        "kick",
        "skate_on",
    )
)

# Unusual triplets (subj, pred, obj) as defined in the UnRel dataset
# These are used to compute mAP
UNUSUAL_RELATIONS = (
    (24, 9, 0),
    (2, 2, 21),
    (8, 9, 17),
    (8, 22, 2),
    (8, 22, 11),
    (8, 31, 4),
    (8, 31, 8),
    (8, 31, 45),
    (8, 15, 68),
    (61, 31, 41),
    (61, 31, 0),
    (61, 35, 46),
    (61, 1, 88),
    (7, 52, 0),
    (83, 31, 43),
    (83, 31, 0),
    (41, 50, 8),
    (41, 22, 75),
    (41, 22, 11),
    (41, 31, 8),
    (41, 56, 43),
    (41, 56, 0),
    (41, 64, 0),
    (41, 35, 24),
    (41, 35, 41),
    (41, 35, 43),
    (41, 35, 18),
    (41, 35, 0),
    (41, 52, 0),
    (41, 1, 13),
    (41, 1, 36),
    (41, 1, 16),
    (41, 1, 6),
    (41, 1, 33),
    (41, 1, 62),
    (41, 1, 88),
    (68, 42, 8),
    (68, 22, 11),
    (68, 35, 24),
    (68, 62, 0),
    (68, 1, 10),
    (68, 1, 13),
    (68, 1, 16),
    (13, 31, 2),
    (43, 0, 51),
    (0, 9, 40),
    (0, 9, 24),
    (0, 9, 8),
    (0, 36, 40),
    (0, 36, 7),
    (0, 27, 8),
    (0, 27, 44),
    (0, 27, 33),
    (0, 22, 76),
    (0, 22, 75),
    (0, 46, 55),
    (0, 46, 11),
    (0, 31, 8),
    (0, 31, 47),
    (0, 56, 12),
    (0, 35, 41),
    (0, 35, 87),
    (0, 35, 99),
    (0, 35, 9),
    (0, 38, 32),
    (0, 38, 8),
    (0, 38, 43),
    (0, 52, 2),
    (0, 52, 68),
    (0, 15, 19),
    (0, 15, 5),
    (0, 1, 83),
    (99, 31, 0),
    (11, 31, 8),
    (3, 36, 68),
    (22, 42, 41),
)
